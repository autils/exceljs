{"version":3,"file":"xlsx.js","names":["fs","require","JSZip","PassThrough","ZipStream","StreamBuf","utils","XmlStream","bufferToString","StylesXform","CoreXform","SharedStringsXform","RelationshipsXform","ContentTypesXform","AppXform","WorkbookXform","WorksheetXform","DrawingXform","TableXform","PivotCacheRecordsXform","PivotCacheDefinitionXform","PivotTableXform","CommentsXform","VmlNotesXform","theme1Xml","fsReadFileAsync","filename","options","Promise","resolve","reject","readFile","error","data","XLSX","constructor","workbook","exists","Error","stream","createReadStream","read","close","parseRels","xform","parseStream","parseWorkbook","parseSharedStrings","reconcile","model","workbookXform","worksheetXform","drawingXform","tableXform","drawingOptions","media","mediaIndex","Object","keys","drawings","forEach","name","drawing","drawingRel","drawingRels","rels","reduce","o","rel","Id","anchors","anchor","hyperlinks","picture","shape","rId","hyperlink","Target","tableOptions","styles","values","tables","table","sheetOptions","sharedStrings","date1904","properties","comments","vmlDrawings","worksheets","worksheet","relationships","worksheetRels","sheetNo","worksheetHash","globalRels","workbookRels","sheetDefs","_processWorksheetEntry","path","push","_processCommentEntry","_processTableEntry","_processWorksheetRelsEntry","_processMediaEntry","entry","lastDot","lastIndexOf","extension","substr","streamBuf","on","length","medium","type","buffer","toBuffer","pipe","_processDrawingEntry","_processDrawingRelsEntry","_processVmlDrawingEntry","vmlDrawing","_processThemeEntry","themes","toString","createInputStream","Symbol","asyncIterator","chunks","chunk","load","Buffer","concat","base64","from","zip","loadAsync","files","dir","entryName","match","write","async","writableObjectMode","readableObjectMode","content","process","browser","chunkSize","i","substring","end","sheets","definedNames","views","calcProperties","appXform","appProperties","company","manager","coreXform","coreProperties","assign","addMedia","all","map","append","dataimg64","indexOf","addDrawings","relsXform","prepare","xml","toXml","addTables","tableXml","target","addPivotTables","pivotTables","pivotTable","pivotCacheRecordsXform","pivotCacheDefinitionXform","pivotTableXform","Type","RelType","PivotCacheRecords","PivotCacheDefinition","addContentTypes","addApp","addCore","addThemes","theme1","addOfficeRels","OfficeDocument","CoreProperties","ExtenderProperties","addWorkbookRels","count","Styles","Theme","SharedStrings","Worksheet","id","addSharedStrings","addStyles","addWorkbook","addWorksheets","relationshipsXform","commentsXform","vmlNotesXform","xmlStream","render","_finalize","finalize","prepareModel","creator","lastModifiedBy","created","Date","modified","useSharedStrings","undefined","useStyles","Mock","worksheetOptions","drawingsCount","commentRefs","tableCount","ZipWriter","writeFile","createWriteStream","then","catch","err","writeBuffer","module","exports"],"sources":["../../../lib/xlsx/xlsx.js"],"sourcesContent":["const fs = require('fs');\nconst JSZip = require('jszip');\nconst {PassThrough} = require('readable-stream');\nconst ZipStream = require('../utils/zip-stream');\nconst StreamBuf = require('../utils/stream-buf');\n\nconst utils = require('../utils/utils');\nconst XmlStream = require('../utils/xml-stream');\nconst {bufferToString} = require('../utils/browser-buffer-decode');\n\nconst StylesXform = require('./xform/style/styles-xform');\n\nconst CoreXform = require('./xform/core/core-xform');\nconst SharedStringsXform = require('./xform/strings/shared-strings-xform');\nconst RelationshipsXform = require('./xform/core/relationships-xform');\nconst ContentTypesXform = require('./xform/core/content-types-xform');\nconst AppXform = require('./xform/core/app-xform');\nconst WorkbookXform = require('./xform/book/workbook-xform');\nconst WorksheetXform = require('./xform/sheet/worksheet-xform');\nconst DrawingXform = require('./xform/drawing/drawing-xform');\nconst TableXform = require('./xform/table/table-xform');\nconst PivotCacheRecordsXform = require('./xform/pivot-table/pivot-cache-records-xform');\nconst PivotCacheDefinitionXform = require('./xform/pivot-table/pivot-cache-definition-xform');\nconst PivotTableXform = require('./xform/pivot-table/pivot-table-xform');\nconst CommentsXform = require('./xform/comment/comments-xform');\nconst VmlNotesXform = require('./xform/comment/vml-notes-xform');\n\nconst theme1Xml = require('./xml/theme1');\n\nfunction fsReadFileAsync(filename, options) {\n  return new Promise((resolve, reject) => {\n    fs.readFile(filename, options, (error, data) => {\n      if (error) {\n        reject(error);\n      } else {\n        resolve(data);\n      }\n    });\n  });\n}\n\nclass XLSX {\n  constructor(workbook) {\n    this.workbook = workbook;\n  }\n\n  // ===============================================================================\n  // Workbook\n  // =========================================================================\n  // Read\n\n  async readFile(filename, options) {\n    if (!(await utils.fs.exists(filename))) {\n      throw new Error(`File not found: ${filename}`);\n    }\n    const stream = fs.createReadStream(filename);\n    try {\n      const workbook = await this.read(stream, options);\n      stream.close();\n      return workbook;\n    } catch (error) {\n      stream.close();\n      throw error;\n    }\n  }\n\n  parseRels(stream) {\n    const xform = new RelationshipsXform();\n    return xform.parseStream(stream);\n  }\n\n  parseWorkbook(stream) {\n    const xform = new WorkbookXform();\n    return xform.parseStream(stream);\n  }\n\n  parseSharedStrings(stream) {\n    const xform = new SharedStringsXform();\n    return xform.parseStream(stream);\n  }\n\n  reconcile(model, options) {\n    const workbookXform = new WorkbookXform();\n    const worksheetXform = new WorksheetXform(options);\n    const drawingXform = new DrawingXform();\n    const tableXform = new TableXform();\n\n    workbookXform.reconcile(model);\n\n    // reconcile drawings with their rels\n    const drawingOptions = {\n      media: model.media,\n      mediaIndex: model.mediaIndex,\n    };\n    Object.keys(model.drawings).forEach(name => {\n      const drawing = model.drawings[name];\n      const drawingRel = model.drawingRels[name];\n      if (drawingRel) {\n        drawingOptions.rels = drawingRel.reduce((o, rel) => {\n          o[rel.Id] = rel;\n          return o;\n        }, {});\n        (drawing.anchors || []).forEach(anchor => {\n          const hyperlinks = (anchor.picture && anchor.picture.hyperlinks) || (anchor.shape && anchor.shape.hyperlinks);\n          if (hyperlinks && drawingOptions.rels[hyperlinks.rId]) {\n            hyperlinks.hyperlink = drawingOptions.rels[hyperlinks.rId].Target;\n            delete hyperlinks.rId;\n          }\n        });\n        drawingXform.reconcile(drawing, drawingOptions);\n      }\n    });\n\n    // reconcile tables with the default styles\n    const tableOptions = {\n      styles: model.styles,\n    };\n    Object.values(model.tables).forEach(table => {\n      tableXform.reconcile(table, tableOptions);\n    });\n\n    const sheetOptions = {\n      styles: model.styles,\n      sharedStrings: model.sharedStrings,\n      media: model.media,\n      mediaIndex: model.mediaIndex,\n      date1904: model.properties && model.properties.date1904,\n      drawings: model.drawings,\n      comments: model.comments,\n      tables: model.tables,\n      vmlDrawings: model.vmlDrawings,\n    };\n    model.worksheets.forEach(worksheet => {\n      worksheet.relationships = model.worksheetRels[worksheet.sheetNo];\n      worksheetXform.reconcile(worksheet, sheetOptions);\n    });\n\n    // delete unnecessary parts\n    delete model.worksheetHash;\n    delete model.worksheetRels;\n    delete model.globalRels;\n    delete model.sharedStrings;\n    delete model.workbookRels;\n    delete model.sheetDefs;\n    delete model.styles;\n    delete model.mediaIndex;\n    delete model.drawings;\n    delete model.drawingRels;\n    delete model.vmlDrawings;\n  }\n\n  async _processWorksheetEntry(stream, model, sheetNo, options, path) {\n    const xform = new WorksheetXform(options);\n    const worksheet = await xform.parseStream(stream);\n    worksheet.sheetNo = sheetNo;\n    model.worksheetHash[path] = worksheet;\n    model.worksheets.push(worksheet);\n  }\n\n  async _processCommentEntry(stream, model, name) {\n    const xform = new CommentsXform();\n    const comments = await xform.parseStream(stream);\n    model.comments[`../${name}.xml`] = comments;\n  }\n\n  async _processTableEntry(stream, model, name) {\n    const xform = new TableXform();\n    const table = await xform.parseStream(stream);\n    model.tables[`../tables/${name}.xml`] = table;\n  }\n\n  async _processWorksheetRelsEntry(stream, model, sheetNo) {\n    const xform = new RelationshipsXform();\n    const relationships = await xform.parseStream(stream);\n    model.worksheetRels[sheetNo] = relationships;\n  }\n\n  async _processMediaEntry(entry, model, filename) {\n    const lastDot = filename.lastIndexOf('.');\n    // if we can't determine extension, ignore it\n    if (lastDot >= 1) {\n      const extension = filename.substr(lastDot + 1);\n      const name = filename.substr(0, lastDot);\n      await new Promise((resolve, reject) => {\n        const streamBuf = new StreamBuf();\n        streamBuf.on('finish', () => {\n          model.mediaIndex[filename] = model.media.length;\n          model.mediaIndex[name] = model.media.length;\n          const medium = {\n            type: 'image',\n            name,\n            extension,\n            buffer: streamBuf.toBuffer(),\n          };\n          model.media.push(medium);\n          resolve();\n        });\n        entry.on('error', error => {\n          reject(error);\n        });\n        entry.pipe(streamBuf);\n      });\n    }\n  }\n\n  async _processDrawingEntry(entry, model, name) {\n    const xform = new DrawingXform();\n    const drawing = await xform.parseStream(entry);\n    model.drawings[name] = drawing;\n  }\n\n  async _processDrawingRelsEntry(entry, model, name) {\n    const xform = new RelationshipsXform();\n    const relationships = await xform.parseStream(entry);\n    model.drawingRels[name] = relationships;\n  }\n\n  async _processVmlDrawingEntry(entry, model, name) {\n    const xform = new VmlNotesXform();\n    const vmlDrawing = await xform.parseStream(entry);\n    model.vmlDrawings[`../drawings/${name}.vml`] = vmlDrawing;\n  }\n\n  async _processThemeEntry(entry, model, name) {\n    await new Promise((resolve, reject) => {\n      // TODO: stream entry into buffer and store the xml in the model.themes[]\n      const stream = new StreamBuf();\n      entry.on('error', reject);\n      stream.on('error', reject);\n      stream.on('finish', () => {\n        model.themes[name] = stream.read().toString();\n        resolve();\n      });\n      entry.pipe(stream);\n    });\n  }\n\n  /**\n   * @deprecated since version 4.0. You should use `#read` instead. Please follow upgrade instruction: https://github.com/exceljs/exceljs/blob/master/UPGRADE-4.0.md\n   */\n  createInputStream() {\n    throw new Error(\n      '`XLSX#createInputStream` is deprecated. You should use `XLSX#read` instead. This method will be removed in version 5.0. Please follow upgrade instruction: https://github.com/exceljs/exceljs/blob/master/UPGRADE-4.0.md'\n    );\n  }\n\n  async read(stream, options) {\n    // TODO: Remove once node v8 is deprecated\n    // Detect and upgrade old streams\n    if (!stream[Symbol.asyncIterator] && stream.pipe) {\n      stream = stream.pipe(new PassThrough());\n    }\n    const chunks = [];\n    for await (const chunk of stream) {\n      chunks.push(chunk);\n    }\n    return this.load(Buffer.concat(chunks), options);\n  }\n\n  async load(data, options) {\n    let buffer;\n    if (options && options.base64) {\n      buffer = Buffer.from(data.toString(), 'base64');\n    } else {\n      buffer = data;\n    }\n\n    const model = {\n      worksheets: [],\n      worksheetHash: {},\n      worksheetRels: [],\n      themes: {},\n      media: [],\n      mediaIndex: {},\n      drawings: {},\n      drawingRels: {},\n      comments: {},\n      tables: {},\n      vmlDrawings: {},\n    };\n\n    const zip = await JSZip.loadAsync(buffer);\n    for (const entry of Object.values(zip.files)) {\n      /* eslint-disable no-await-in-loop */\n      if (!entry.dir) {\n        let entryName = entry.name;\n        if (entryName[0] === '/') {\n          entryName = entryName.substr(1);\n        }\n        let stream;\n        if (\n          entryName.match(/xl\\/media\\//) ||\n          // themes are not parsed as stream\n          entryName.match(/xl\\/theme\\/([a-zA-Z0-9]+)[.]xml/)\n        ) {\n          stream = new PassThrough();\n          stream.write(await entry.async('nodebuffer'));\n        } else {\n          // use object mode to avoid buffer-string convention\n          stream = new PassThrough({\n            writableObjectMode: true,\n            readableObjectMode: true,\n          });\n          let content;\n          // https://www.npmjs.com/package/process\n          if (process.browser) {\n            // running in browser, use TextDecoder if possible\n            content = bufferToString(await entry.async('nodebuffer'));\n          } else {\n            // running in node.js\n            content = await entry.async('string');\n          }\n          const chunkSize = 16 * 1024;\n          for (let i = 0; i < content.length; i += chunkSize) {\n            stream.write(content.substring(i, i + chunkSize));\n          }\n        }\n        stream.end();\n        switch (entryName) {\n          case '_rels/.rels':\n            model.globalRels = await this.parseRels(stream);\n            break;\n\n          case 'xl/workbook.xml': {\n            const workbook = await this.parseWorkbook(stream);\n            model.sheets = workbook.sheets;\n            model.definedNames = workbook.definedNames;\n            model.views = workbook.views;\n            model.properties = workbook.properties;\n            model.calcProperties = workbook.calcProperties;\n            break;\n          }\n\n          case 'xl/_rels/workbook.xml.rels':\n            model.workbookRels = await this.parseRels(stream);\n            break;\n\n          case 'xl/sharedStrings.xml':\n            model.sharedStrings = new SharedStringsXform();\n            await model.sharedStrings.parseStream(stream);\n            break;\n\n          case 'xl/styles.xml':\n            model.styles = new StylesXform();\n            await model.styles.parseStream(stream);\n            break;\n\n          case 'docProps/app.xml': {\n            const appXform = new AppXform();\n            const appProperties = await appXform.parseStream(stream);\n            model.company = appProperties.company;\n            model.manager = appProperties.manager;\n            break;\n          }\n\n          case 'docProps/core.xml': {\n            const coreXform = new CoreXform();\n            const coreProperties = await coreXform.parseStream(stream);\n            Object.assign(model, coreProperties);\n            break;\n          }\n\n          default: {\n            let match = entryName.match(/xl\\/worksheets\\/sheet(\\d+)[.]xml/);\n            if (match) {\n              await this._processWorksheetEntry(stream, model, match[1], options, entryName);\n              break;\n            }\n            match = entryName.match(/xl\\/worksheets\\/_rels\\/sheet(\\d+)[.]xml.rels/);\n            if (match) {\n              await this._processWorksheetRelsEntry(stream, model, match[1]);\n              break;\n            }\n            match = entryName.match(/xl\\/theme\\/([a-zA-Z0-9]+)[.]xml/);\n            if (match) {\n              await this._processThemeEntry(stream, model, match[1]);\n              break;\n            }\n            match = entryName.match(/xl\\/media\\/([a-zA-Z0-9]+[.][a-zA-Z0-9]{3,4})$/);\n            if (match) {\n              await this._processMediaEntry(stream, model, match[1]);\n              break;\n            }\n            match = entryName.match(/xl\\/drawings\\/([a-zA-Z0-9]+)[.]xml/);\n            if (match) {\n              await this._processDrawingEntry(stream, model, match[1]);\n              break;\n            }\n            match = entryName.match(/xl\\/(comments\\d+)[.]xml/);\n            if (match) {\n              await this._processCommentEntry(stream, model, match[1]);\n              break;\n            }\n            match = entryName.match(/xl\\/tables\\/(table\\d+)[.]xml/);\n            if (match) {\n              await this._processTableEntry(stream, model, match[1]);\n              break;\n            }\n            match = entryName.match(/xl\\/drawings\\/_rels\\/([a-zA-Z0-9]+)[.]xml[.]rels/);\n            if (match) {\n              await this._processDrawingRelsEntry(stream, model, match[1]);\n              break;\n            }\n            match = entryName.match(/xl\\/drawings\\/(vmlDrawing\\d+)[.]vml/);\n            if (match) {\n              await this._processVmlDrawingEntry(stream, model, match[1]);\n              break;\n            }\n          }\n        }\n      }\n    }\n\n    this.reconcile(model, options);\n\n    // apply model\n    this.workbook.model = model;\n    return this.workbook;\n  }\n\n  // =========================================================================\n  // Write\n\n  async addMedia(zip, model) {\n    await Promise.all(\n      model.media.map(async medium => {\n        if (medium.type === 'image') {\n          const filename = `xl/media/${medium.name}.${medium.extension}`;\n          if (medium.filename) {\n            const data = await fsReadFileAsync(medium.filename);\n            return zip.append(data, {name: filename});\n          }\n          if (medium.buffer) {\n            return zip.append(medium.buffer, {name: filename});\n          }\n          if (medium.base64) {\n            const dataimg64 = medium.base64;\n            const content = dataimg64.substring(dataimg64.indexOf(',') + 1);\n            return zip.append(content, {name: filename, base64: true});\n          }\n        }\n        throw new Error('Unsupported media');\n      })\n    );\n  }\n\n  addDrawings(zip, model) {\n    const drawingXform = new DrawingXform();\n    const relsXform = new RelationshipsXform();\n\n    model.worksheets.forEach(worksheet => {\n      const {drawing} = worksheet;\n      if (drawing) {\n        drawingXform.prepare(drawing, {});\n        let xml = drawingXform.toXml(drawing);\n        zip.append(xml, {name: `xl/drawings/${drawing.name}.xml`});\n\n        xml = relsXform.toXml(drawing.rels);\n        zip.append(xml, {name: `xl/drawings/_rels/${drawing.name}.xml.rels`});\n      }\n    });\n  }\n\n  addTables(zip, model) {\n    const tableXform = new TableXform();\n\n    model.worksheets.forEach(worksheet => {\n      const {tables} = worksheet;\n      tables.forEach(table => {\n        tableXform.prepare(table, {});\n        const tableXml = tableXform.toXml(table);\n        zip.append(tableXml, {name: `xl/tables/${table.target}`});\n      });\n    });\n  }\n\n  addPivotTables(zip, model) {\n    if (!model.pivotTables.length) return;\n\n    const pivotTable = model.pivotTables[0];\n\n    const pivotCacheRecordsXform = new PivotCacheRecordsXform();\n    const pivotCacheDefinitionXform = new PivotCacheDefinitionXform();\n    const pivotTableXform = new PivotTableXform();\n    const relsXform = new RelationshipsXform();\n\n    // pivot cache records\n    // --------------------------------------------------\n    // copy of the source data.\n    //\n    // Note: cells in the columns of the source data which are part\n    // of the \"rows\" or \"columns\" of the pivot table configuration are\n    // replaced by references to their __cache field__ identifiers.\n    // See \"pivot cache definition\" below.\n\n    let xml = pivotCacheRecordsXform.toXml(pivotTable);\n    zip.append(xml, {name: 'xl/pivotCache/pivotCacheRecords1.xml'});\n\n    // pivot cache definition\n    // --------------------------------------------------\n    // cache source (source data):\n    //    ref=\"A1:E7\" on sheet=\"Sheet1\"\n    // cache fields:\n    //    - 0: \"A\" (a1, a2, a3)\n    //    - 1: \"B\" (b1, b2)\n    //    - ...\n\n    xml = pivotCacheDefinitionXform.toXml(pivotTable);\n    zip.append(xml, {name: 'xl/pivotCache/pivotCacheDefinition1.xml'});\n\n    xml = relsXform.toXml([\n      {\n        Id: 'rId1',\n        Type: XLSX.RelType.PivotCacheRecords,\n        Target: 'pivotCacheRecords1.xml',\n      },\n    ]);\n    zip.append(xml, {name: 'xl/pivotCache/_rels/pivotCacheDefinition1.xml.rels'});\n\n    // pivot tables (on destination worksheet)\n    // --------------------------------------------------\n    // location: ref=\"A3:E15\"\n    // pivotFields\n    // rowFields and rowItems\n    // colFields and colItems\n    // dataFields\n    // pivotTableStyleInfo\n\n    xml = pivotTableXform.toXml(pivotTable);\n    zip.append(xml, {name: 'xl/pivotTables/pivotTable1.xml'});\n\n    xml = relsXform.toXml([\n      {\n        Id: 'rId1',\n        Type: XLSX.RelType.PivotCacheDefinition,\n        Target: '../pivotCache/pivotCacheDefinition1.xml',\n      },\n    ]);\n    zip.append(xml, {name: 'xl/pivotTables/_rels/pivotTable1.xml.rels'});\n  }\n\n  async addContentTypes(zip, model) {\n    const xform = new ContentTypesXform();\n    const xml = xform.toXml(model);\n    zip.append(xml, {name: '[Content_Types].xml'});\n  }\n\n  async addApp(zip, model) {\n    const xform = new AppXform();\n    const xml = xform.toXml(model);\n    zip.append(xml, {name: 'docProps/app.xml'});\n  }\n\n  async addCore(zip, model) {\n    const coreXform = new CoreXform();\n    zip.append(coreXform.toXml(model), {name: 'docProps/core.xml'});\n  }\n\n  async addThemes(zip, model) {\n    const themes = model.themes || {theme1: theme1Xml};\n    Object.keys(themes).forEach(name => {\n      const xml = themes[name];\n      const path = `xl/theme/${name}.xml`;\n      zip.append(xml, {name: path});\n    });\n  }\n\n  async addOfficeRels(zip) {\n    const xform = new RelationshipsXform();\n    const xml = xform.toXml([\n      {Id: 'rId1', Type: XLSX.RelType.OfficeDocument, Target: 'xl/workbook.xml'},\n      {Id: 'rId2', Type: XLSX.RelType.CoreProperties, Target: 'docProps/core.xml'},\n      {Id: 'rId3', Type: XLSX.RelType.ExtenderProperties, Target: 'docProps/app.xml'},\n    ]);\n    zip.append(xml, {name: '_rels/.rels'});\n  }\n\n  async addWorkbookRels(zip, model) {\n    let count = 1;\n    const relationships = [\n      {Id: `rId${count++}`, Type: XLSX.RelType.Styles, Target: 'styles.xml'},\n      {Id: `rId${count++}`, Type: XLSX.RelType.Theme, Target: 'theme/theme1.xml'},\n    ];\n    if (model.sharedStrings.count) {\n      relationships.push({\n        Id: `rId${count++}`,\n        Type: XLSX.RelType.SharedStrings,\n        Target: 'sharedStrings.xml',\n      });\n    }\n    if ((model.pivotTables || []).length) {\n      const pivotTable = model.pivotTables[0];\n      pivotTable.rId = `rId${count++}`;\n      relationships.push({\n        Id: pivotTable.rId,\n        Type: XLSX.RelType.PivotCacheDefinition,\n        Target: 'pivotCache/pivotCacheDefinition1.xml',\n      });\n    }\n    model.worksheets.forEach(worksheet => {\n      worksheet.rId = `rId${count++}`;\n      relationships.push({\n        Id: worksheet.rId,\n        Type: XLSX.RelType.Worksheet,\n        Target: `worksheets/sheet${worksheet.id}.xml`,\n      });\n    });\n    const xform = new RelationshipsXform();\n    const xml = xform.toXml(relationships);\n    zip.append(xml, {name: 'xl/_rels/workbook.xml.rels'});\n  }\n\n  async addSharedStrings(zip, model) {\n    if (model.sharedStrings && model.sharedStrings.count) {\n      zip.append(model.sharedStrings.xml, {name: 'xl/sharedStrings.xml'});\n    }\n  }\n\n  async addStyles(zip, model) {\n    const {xml} = model.styles;\n    if (xml) {\n      zip.append(xml, {name: 'xl/styles.xml'});\n    }\n  }\n\n  async addWorkbook(zip, model) {\n    const xform = new WorkbookXform();\n    zip.append(xform.toXml(model), {name: 'xl/workbook.xml'});\n  }\n\n  async addWorksheets(zip, model) {\n    // preparation phase\n    const worksheetXform = new WorksheetXform();\n    const relationshipsXform = new RelationshipsXform();\n    const commentsXform = new CommentsXform();\n    const vmlNotesXform = new VmlNotesXform();\n\n    // write sheets\n    model.worksheets.forEach(worksheet => {\n      let xmlStream = new XmlStream();\n      worksheetXform.render(xmlStream, worksheet);\n      zip.append(xmlStream.xml, {name: `xl/worksheets/sheet${worksheet.id}.xml`});\n\n      if (worksheet.rels && worksheet.rels.length) {\n        xmlStream = new XmlStream();\n        relationshipsXform.render(xmlStream, worksheet.rels);\n        zip.append(xmlStream.xml, {name: `xl/worksheets/_rels/sheet${worksheet.id}.xml.rels`});\n      }\n\n      if (worksheet.comments.length > 0) {\n        xmlStream = new XmlStream();\n        commentsXform.render(xmlStream, worksheet);\n        zip.append(xmlStream.xml, {name: `xl/comments${worksheet.id}.xml`});\n\n        xmlStream = new XmlStream();\n        vmlNotesXform.render(xmlStream, worksheet);\n        zip.append(xmlStream.xml, {name: `xl/drawings/vmlDrawing${worksheet.id}.vml`});\n      }\n    });\n  }\n\n  _finalize(zip) {\n    return new Promise((resolve, reject) => {\n      zip.on('finish', () => {\n        resolve(this);\n      });\n      zip.on('error', reject);\n      zip.finalize();\n    });\n  }\n\n  prepareModel(model, options) {\n    // ensure following properties have sane values\n    model.creator = model.creator || 'ExcelJS';\n    model.lastModifiedBy = model.lastModifiedBy || 'ExcelJS';\n    model.created = model.created || new Date();\n    model.modified = model.modified || new Date();\n\n    model.useSharedStrings = options.useSharedStrings !== undefined ? options.useSharedStrings : true;\n    model.useStyles = options.useStyles !== undefined ? options.useStyles : true;\n\n    // Manage the shared strings\n    model.sharedStrings = new SharedStringsXform();\n\n    // add a style manager to handle cell formats, fonts, etc.\n    model.styles = model.useStyles ? new StylesXform(true) : new StylesXform.Mock();\n\n    // prepare all of the things before the render\n    const workbookXform = new WorkbookXform();\n    const worksheetXform = new WorksheetXform();\n\n    workbookXform.prepare(model);\n\n    const worksheetOptions = {\n      sharedStrings: model.sharedStrings,\n      styles: model.styles,\n      date1904: model.properties.date1904,\n      drawingsCount: 0,\n      media: model.media,\n    };\n    worksheetOptions.drawings = model.drawings = [];\n    worksheetOptions.commentRefs = model.commentRefs = [];\n    let tableCount = 0;\n    model.tables = [];\n    model.worksheets.forEach(worksheet => {\n      // assign unique filenames to tables\n      worksheet.tables.forEach(table => {\n        tableCount++;\n        table.target = `table${tableCount}.xml`;\n        table.id = tableCount;\n        model.tables.push(table);\n      });\n\n      worksheetXform.prepare(worksheet, worksheetOptions);\n    });\n\n    // TODO: workbook drawing list\n  }\n\n  async write(stream, options) {\n    options = options || {};\n    const {model} = this.workbook;\n    const zip = new ZipStream.ZipWriter(options.zip);\n    zip.pipe(stream);\n\n    this.prepareModel(model, options);\n\n    // render\n    await this.addContentTypes(zip, model);\n    await this.addOfficeRels(zip, model);\n    await this.addWorkbookRels(zip, model);\n    await this.addWorksheets(zip, model);\n    await this.addSharedStrings(zip, model); // always after worksheets\n    await this.addDrawings(zip, model);\n    await this.addTables(zip, model);\n    await this.addPivotTables(zip, model);\n    await Promise.all([this.addThemes(zip, model), this.addStyles(zip, model)]);\n    await this.addMedia(zip, model);\n    await Promise.all([this.addApp(zip, model), this.addCore(zip, model)]);\n    await this.addWorkbook(zip, model);\n    return this._finalize(zip);\n  }\n\n  writeFile(filename, options) {\n    const stream = fs.createWriteStream(filename);\n\n    return new Promise((resolve, reject) => {\n      stream.on('finish', () => {\n        resolve();\n      });\n      stream.on('error', error => {\n        reject(error);\n      });\n\n      this.write(stream, options)\n        .then(() => {\n          stream.end();\n        })\n        .catch(err => {\n          reject(err);\n        });\n    });\n  }\n\n  async writeBuffer(options) {\n    const stream = new StreamBuf();\n    await this.write(stream, options);\n    return stream.read();\n  }\n}\n\nXLSX.RelType = require('./rel-type');\n\nmodule.exports = XLSX;\n"],"mappings":"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","ignoreList":[]}