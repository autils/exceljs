{"version":3,"file":"tx-body-xform.js","names":["BaseXform","require","ParagraphXform","TxBodyXform","constructor","map","tag","render","xmlStream","textBody","openNode","vertOverflow","horzOverflow","rtlCol","vertAlign","addAttribute","closeNode","leafNode","paragraphs","forEach","p","parseOpen","node","parser","name","model","attributes","anchor","parseText","text","parseClose","push","undefined","module","exports"],"sources":["../../../../../../lib/xlsx/xform/drawing/shape/tx-body-xform.js"],"sourcesContent":["const BaseXform = require('../../base-xform');\nconst ParagraphXform = require('./p-xform');\n\n// DocumentFormat.OpenXml.Drawing.Spreadsheet.TextBody\nclass TxBodyXform extends BaseXform {\n  constructor() {\n    super();\n\n    this.map = {\n      'a:p': new ParagraphXform(),\n    };\n  }\n\n  get tag() {\n    return 'xdr:txBody';\n  }\n\n  render(xmlStream, textBody) {\n    xmlStream.openNode(this.tag);\n    xmlStream.openNode('a:bodyPr', {\n      vertOverflow: 'clip',\n      horzOverflow: 'clip',\n      rtlCol: 0,\n    });\n    if (textBody.vertAlign) {\n      xmlStream.addAttribute('anchor', textBody.vertAlign);\n    }\n    xmlStream.closeNode();\n    xmlStream.leafNode('a:lstStyle');\n    textBody.paragraphs.forEach(p => {\n      this.map['a:p'].render(xmlStream, p);\n    });\n    xmlStream.closeNode();\n  }\n\n  parseOpen(node) {\n    if (this.parser) {\n      this.parser.parseOpen(node);\n      return true;\n    }\n\n    switch (node.name) {\n      case this.tag:\n        this.model = {paragraphs: []};\n        break;\n      case 'a:bodyPr':\n        if (node.attributes.anchor) {\n          this.model.vertAlign = node.attributes.anchor;\n        }\n        break;\n      default:\n        this.parser = this.map[node.name];\n        if (this.parser) {\n          this.parser.parseOpen(node);\n        }\n        break;\n    }\n    return true;\n  }\n\n  parseText(text) {\n    if (this.parser) {\n      this.parser.parseText(text);\n    }\n  }\n\n  parseClose(name) {\n    if (this.parser) {\n      if (!this.parser.parseClose(name)) {\n        if (name === 'a:p') {\n          this.model.paragraphs.push(this.parser.model);\n        }\n        this.parser = undefined;\n      }\n      return true;\n    }\n    switch (name) {\n      case this.tag:\n        return false;\n      default:\n        return true;\n    }\n  }\n}\n\nmodule.exports = TxBodyXform;\n"],"mappings":";;AAAA,MAAMA,SAAS,GAAGC,OAAO,CAAC,kBAAkB,CAAC;AAC7C,MAAMC,cAAc,GAAGD,OAAO,CAAC,WAAW,CAAC;;AAE3C;AACA,MAAME,WAAW,SAASH,SAAS,CAAC;EAClCI,WAAWA,CAAA,EAAG;IACZ,KAAK,CAAC,CAAC;IAEP,IAAI,CAACC,GAAG,GAAG;MACT,KAAK,EAAE,IAAIH,cAAc,CAAC;IAC5B,CAAC;EACH;EAEA,IAAII,GAAGA,CAAA,EAAG;IACR,OAAO,YAAY;EACrB;EAEAC,MAAMA,CAACC,SAAS,EAAEC,QAAQ,EAAE;IAC1BD,SAAS,CAACE,QAAQ,CAAC,IAAI,CAACJ,GAAG,CAAC;IAC5BE,SAAS,CAACE,QAAQ,CAAC,UAAU,EAAE;MAC7BC,YAAY,EAAE,MAAM;MACpBC,YAAY,EAAE,MAAM;MACpBC,MAAM,EAAE;IACV,CAAC,CAAC;IACF,IAAIJ,QAAQ,CAACK,SAAS,EAAE;MACtBN,SAAS,CAACO,YAAY,CAAC,QAAQ,EAAEN,QAAQ,CAACK,SAAS,CAAC;IACtD;IACAN,SAAS,CAACQ,SAAS,CAAC,CAAC;IACrBR,SAAS,CAACS,QAAQ,CAAC,YAAY,CAAC;IAChCR,QAAQ,CAACS,UAAU,CAACC,OAAO,CAACC,CAAC,IAAI;MAC/B,IAAI,CAACf,GAAG,CAAC,KAAK,CAAC,CAACE,MAAM,CAACC,SAAS,EAAEY,CAAC,CAAC;IACtC,CAAC,CAAC;IACFZ,SAAS,CAACQ,SAAS,CAAC,CAAC;EACvB;EAEAK,SAASA,CAACC,IAAI,EAAE;IACd,IAAI,IAAI,CAACC,MAAM,EAAE;MACf,IAAI,CAACA,MAAM,CAACF,SAAS,CAACC,IAAI,CAAC;MAC3B,OAAO,IAAI;IACb;IAEA,QAAQA,IAAI,CAACE,IAAI;MACf,KAAK,IAAI,CAAClB,GAAG;QACX,IAAI,CAACmB,KAAK,GAAG;UAACP,UAAU,EAAE;QAAE,CAAC;QAC7B;MACF,KAAK,UAAU;QACb,IAAII,IAAI,CAACI,UAAU,CAACC,MAAM,EAAE;UAC1B,IAAI,CAACF,KAAK,CAACX,SAAS,GAAGQ,IAAI,CAACI,UAAU,CAACC,MAAM;QAC/C;QACA;MACF;QACE,IAAI,CAACJ,MAAM,GAAG,IAAI,CAAClB,GAAG,CAACiB,IAAI,CAACE,IAAI,CAAC;QACjC,IAAI,IAAI,CAACD,MAAM,EAAE;UACf,IAAI,CAACA,MAAM,CAACF,SAAS,CAACC,IAAI,CAAC;QAC7B;QACA;IACJ;IACA,OAAO,IAAI;EACb;EAEAM,SAASA,CAACC,IAAI,EAAE;IACd,IAAI,IAAI,CAACN,MAAM,EAAE;MACf,IAAI,CAACA,MAAM,CAACK,SAAS,CAACC,IAAI,CAAC;IAC7B;EACF;EAEAC,UAAUA,CAACN,IAAI,EAAE;IACf,IAAI,IAAI,CAACD,MAAM,EAAE;MACf,IAAI,CAAC,IAAI,CAACA,MAAM,CAACO,UAAU,CAACN,IAAI,CAAC,EAAE;QACjC,IAAIA,IAAI,KAAK,KAAK,EAAE;UAClB,IAAI,CAACC,KAAK,CAACP,UAAU,CAACa,IAAI,CAAC,IAAI,CAACR,MAAM,CAACE,KAAK,CAAC;QAC/C;QACA,IAAI,CAACF,MAAM,GAAGS,SAAS;MACzB;MACA,OAAO,IAAI;IACb;IACA,QAAQR,IAAI;MACV,KAAK,IAAI,CAAClB,GAAG;QACX,OAAO,KAAK;MACd;QACE,OAAO,IAAI;IACf;EACF;AACF;AAEA2B,MAAM,CAACC,OAAO,GAAG/B,WAAW","ignoreList":[]}