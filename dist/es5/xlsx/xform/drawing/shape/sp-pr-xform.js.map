{"version":3,"file":"sp-pr-xform.js","names":["BaseXform","require","XfrmXform","PrstGeomXform","SolidFillXform","LnXform","SpPrXform","constructor","map","tag","render","xmlStream","shape","openNode","fill","type","color","leafNode","outline","closeNode","parseOpen","node","parser","name","model","noFill","parseText","parseClose","undefined","mergeModel","module","exports"],"sources":["../../../../../../lib/xlsx/xform/drawing/shape/sp-pr-xform.js"],"sourcesContent":["const BaseXform = require('../../base-xform');\nconst XfrmXform = require('../xfrm-xform');\nconst PrstGeomXform = require('./prst-geom-xform');\nconst SolidFillXform = require('./solid-fill-xform');\nconst LnXform = require('./ln-xform');\n\n// DocumentFormat.OpenXml.Drawing.Spreadsheet.ShapeProperties\nclass SpPrXform extends BaseXform {\n  constructor() {\n    super();\n\n    this.map = {\n      'a:xfrm': new XfrmXform(),\n      'a:prstGeom': new PrstGeomXform(),\n      'a:solidFill': new SolidFillXform(),\n      'a:ln': new LnXform(),\n    };\n  }\n\n  get tag() {\n    return 'xdr:spPr';\n  }\n\n  render(xmlStream, shape) {\n    xmlStream.openNode(this.tag);\n    this.map['a:xfrm'].render(xmlStream, shape);\n    this.map['a:prstGeom'].render(xmlStream, shape);\n    if (shape.fill && shape.fill.type === 'solid') {\n      this.map['a:solidFill'].render(xmlStream, shape.fill.color);\n    } else {\n      xmlStream.leafNode('a:noFill');\n    }\n    if (shape.outline) {\n      this.map['a:ln'].render(xmlStream, shape.outline);\n    }\n    xmlStream.closeNode();\n  }\n\n  parseOpen(node) {\n    if (this.parser) {\n      this.parser.parseOpen(node);\n      return true;\n    }\n\n    switch (node.name) {\n      case this.tag:\n        this.model = {};\n        this.noFill = false;\n        break;\n      case 'a:noFill':\n        this.noFill = true;\n        break;\n      default:\n        this.parser = this.map[node.name];\n        if (this.parser) {\n          this.parser.parseOpen(node);\n        }\n        break;\n    }\n    return true;\n  }\n\n  parseText() {}\n\n  parseClose(name) {\n    if (this.parser) {\n      if (!this.parser.parseClose(name)) {\n        this.parser = undefined;\n      }\n      return true;\n    }\n    switch (name) {\n      case this.tag:\n        if (this.map['a:prstGeom'].model) {\n          this.model.type = this.map['a:prstGeom'].model.type;\n        }\n        if (this.map['a:solidFill'].model) {\n          this.model.fill = {\n            type: 'solid',\n            color: this.map['a:solidFill'].model,\n          };\n        }\n        if (this.map['a:ln'].model) {\n          this.model.outline = this.map['a:ln'].model;\n        }\n        if (this.map['a:xfrm'].model) {\n          this.mergeModel(this.map['a:xfrm'].model);\n        }\n        return false;\n      default:\n        return true;\n    }\n  }\n}\n\nmodule.exports = SpPrXform;\n"],"mappings":"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","ignoreList":[]}