{"version":3,"file":"style-matrix-reference-type-xform.js","names":["BaseXform","require","StyleMatrixReferenceTypeXform","constructor","tagName","map","tag","idx","render","xmlStream","openNode","leafNode","val","closeNode","parseOpen","node","parser","name","model","theme","attributes","rgb","parseText","parseClose","undefined","module","exports"],"sources":["../../../../../../lib/xlsx/xform/drawing/shape/style-matrix-reference-type-xform.js"],"sourcesContent":["const BaseXform = require('../../base-xform');\n\n// DocumentFormat.OpenXml.Drawing.StyleMatrixReferenceType\nclass StyleMatrixReferenceTypeXform extends BaseXform {\n  constructor(tagName) {\n    super();\n\n    this.map = {};\n    this.tagName = tagName;\n  }\n\n  get tag() {\n    return this.tagName;\n  }\n\n  idx() {\n    switch (this.tagName) {\n      case 'a:lnRef':\n        return 2;\n      case 'a:fillRef':\n        return 1;\n      default:\n        // do not know when to come here\n        return 0;\n    }\n  }\n\n  render(xmlStream) {\n    xmlStream.openNode(this.tag, {idx: this.idx()});\n    xmlStream.leafNode('a:schemeClr', {val: 'accent1'});\n    xmlStream.closeNode();\n  }\n\n  parseOpen(node) {\n    if (this.parser) {\n      this.parser.parseOpen(node);\n      return true;\n    }\n\n    switch (node.name) {\n      case this.tag:\n        this.model = {};\n        break;\n      case 'a:schemeClr':\n        this.model.theme = node.attributes.val;\n        break;\n      case 'a:srgbClr':\n        this.model.rgb = node.attributes.val;\n        break;\n      default:\n        this.parser = this.map[node.name];\n        if (this.parser) {\n          this.parser.parseOpen(node);\n        }\n        break;\n    }\n    return true;\n  }\n\n  parseText() {}\n\n  parseClose(name) {\n    if (this.parser) {\n      if (!this.parser.parseClose(name)) {\n        this.parser = undefined;\n      }\n      return true;\n    }\n    switch (name) {\n      case this.tag:\n        return false;\n      default:\n        return true;\n    }\n  }\n}\n\nmodule.exports = StyleMatrixReferenceTypeXform;\n"],"mappings":";;AAAA,MAAMA,SAAS,GAAGC,OAAO,CAAC,kBAAkB,CAAC;;AAE7C;AACA,MAAMC,6BAA6B,SAASF,SAAS,CAAC;EACpDG,WAAWA,CAACC,OAAO,EAAE;IACnB,KAAK,CAAC,CAAC;IAEP,IAAI,CAACC,GAAG,GAAG,CAAC,CAAC;IACb,IAAI,CAACD,OAAO,GAAGA,OAAO;EACxB;EAEA,IAAIE,GAAGA,CAAA,EAAG;IACR,OAAO,IAAI,CAACF,OAAO;EACrB;EAEAG,GAAGA,CAAA,EAAG;IACJ,QAAQ,IAAI,CAACH,OAAO;MAClB,KAAK,SAAS;QACZ,OAAO,CAAC;MACV,KAAK,WAAW;QACd,OAAO,CAAC;MACV;QACE;QACA,OAAO,CAAC;IACZ;EACF;EAEAI,MAAMA,CAACC,SAAS,EAAE;IAChBA,SAAS,CAACC,QAAQ,CAAC,IAAI,CAACJ,GAAG,EAAE;MAACC,GAAG,EAAE,IAAI,CAACA,GAAG,CAAC;IAAC,CAAC,CAAC;IAC/CE,SAAS,CAACE,QAAQ,CAAC,aAAa,EAAE;MAACC,GAAG,EAAE;IAAS,CAAC,CAAC;IACnDH,SAAS,CAACI,SAAS,CAAC,CAAC;EACvB;EAEAC,SAASA,CAACC,IAAI,EAAE;IACd,IAAI,IAAI,CAACC,MAAM,EAAE;MACf,IAAI,CAACA,MAAM,CAACF,SAAS,CAACC,IAAI,CAAC;MAC3B,OAAO,IAAI;IACb;IAEA,QAAQA,IAAI,CAACE,IAAI;MACf,KAAK,IAAI,CAACX,GAAG;QACX,IAAI,CAACY,KAAK,GAAG,CAAC,CAAC;QACf;MACF,KAAK,aAAa;QAChB,IAAI,CAACA,KAAK,CAACC,KAAK,GAAGJ,IAAI,CAACK,UAAU,CAACR,GAAG;QACtC;MACF,KAAK,WAAW;QACd,IAAI,CAACM,KAAK,CAACG,GAAG,GAAGN,IAAI,CAACK,UAAU,CAACR,GAAG;QACpC;MACF;QACE,IAAI,CAACI,MAAM,GAAG,IAAI,CAACX,GAAG,CAACU,IAAI,CAACE,IAAI,CAAC;QACjC,IAAI,IAAI,CAACD,MAAM,EAAE;UACf,IAAI,CAACA,MAAM,CAACF,SAAS,CAACC,IAAI,CAAC;QAC7B;QACA;IACJ;IACA,OAAO,IAAI;EACb;EAEAO,SAASA,CAAA,EAAG,CAAC;EAEbC,UAAUA,CAACN,IAAI,EAAE;IACf,IAAI,IAAI,CAACD,MAAM,EAAE;MACf,IAAI,CAAC,IAAI,CAACA,MAAM,CAACO,UAAU,CAACN,IAAI,CAAC,EAAE;QACjC,IAAI,CAACD,MAAM,GAAGQ,SAAS;MACzB;MACA,OAAO,IAAI;IACb;IACA,QAAQP,IAAI;MACV,KAAK,IAAI,CAACX,GAAG;QACX,OAAO,KAAK;MACd;QACE,OAAO,IAAI;IACf;EACF;AACF;AAEAmB,MAAM,CAACC,OAAO,GAAGxB,6BAA6B","ignoreList":[]}