{"version":3,"file":"prst-geom-xform.js","names":["BaseXform","require","PrstGeomXform","constructor","map","tag","render","xmlStream","model","openNode","prst","type","leafNode","closeNode","parseOpen","node","parser","name","attributes","parseText","parseClose","undefined","module","exports"],"sources":["../../../../../../lib/xlsx/xform/drawing/shape/prst-geom-xform.js"],"sourcesContent":["const BaseXform = require('../../base-xform');\n\n// DocumentFormat.OpenXml.Drawing.PresetGeometry\nclass PrstGeomXform extends BaseXform {\n  constructor() {\n    super();\n\n    this.map = {};\n  }\n\n  get tag() {\n    return 'a:prstGeom';\n  }\n\n  render(xmlStream, model) {\n    xmlStream.openNode(this.tag, {prst: model.type});\n    xmlStream.leafNode('a:avLst', {});\n    xmlStream.closeNode();\n  }\n\n  parseOpen(node) {\n    if (this.parser) {\n      this.parser.parseOpen(node);\n      return true;\n    }\n\n    switch (node.name) {\n      case this.tag:\n        this.model = {type: node.attributes.prst};\n        break;\n      default:\n        this.parser = this.map[node.name];\n        if (this.parser) {\n          this.parser.parseOpen(node);\n        }\n        break;\n    }\n    return true;\n  }\n\n  parseText() {}\n\n  parseClose(name) {\n    if (this.parser) {\n      if (!this.parser.parseClose(name)) {\n        this.parser = undefined;\n      }\n      return true;\n    }\n    switch (name) {\n      case this.tag:\n        // TOOD avLst\n        return false;\n      default:\n        return true;\n    }\n  }\n}\n\nmodule.exports = PrstGeomXform;\n"],"mappings":";;AAAA,MAAMA,SAAS,GAAGC,OAAO,CAAC,kBAAkB,CAAC;;AAE7C;AACA,MAAMC,aAAa,SAASF,SAAS,CAAC;EACpCG,WAAWA,CAAA,EAAG;IACZ,KAAK,CAAC,CAAC;IAEP,IAAI,CAACC,GAAG,GAAG,CAAC,CAAC;EACf;EAEA,IAAIC,GAAGA,CAAA,EAAG;IACR,OAAO,YAAY;EACrB;EAEAC,MAAMA,CAACC,SAAS,EAAEC,KAAK,EAAE;IACvBD,SAAS,CAACE,QAAQ,CAAC,IAAI,CAACJ,GAAG,EAAE;MAACK,IAAI,EAAEF,KAAK,CAACG;IAAI,CAAC,CAAC;IAChDJ,SAAS,CAACK,QAAQ,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC;IACjCL,SAAS,CAACM,SAAS,CAAC,CAAC;EACvB;EAEAC,SAASA,CAACC,IAAI,EAAE;IACd,IAAI,IAAI,CAACC,MAAM,EAAE;MACf,IAAI,CAACA,MAAM,CAACF,SAAS,CAACC,IAAI,CAAC;MAC3B,OAAO,IAAI;IACb;IAEA,QAAQA,IAAI,CAACE,IAAI;MACf,KAAK,IAAI,CAACZ,GAAG;QACX,IAAI,CAACG,KAAK,GAAG;UAACG,IAAI,EAAEI,IAAI,CAACG,UAAU,CAACR;QAAI,CAAC;QACzC;MACF;QACE,IAAI,CAACM,MAAM,GAAG,IAAI,CAACZ,GAAG,CAACW,IAAI,CAACE,IAAI,CAAC;QACjC,IAAI,IAAI,CAACD,MAAM,EAAE;UACf,IAAI,CAACA,MAAM,CAACF,SAAS,CAACC,IAAI,CAAC;QAC7B;QACA;IACJ;IACA,OAAO,IAAI;EACb;EAEAI,SAASA,CAAA,EAAG,CAAC;EAEbC,UAAUA,CAACH,IAAI,EAAE;IACf,IAAI,IAAI,CAACD,MAAM,EAAE;MACf,IAAI,CAAC,IAAI,CAACA,MAAM,CAACI,UAAU,CAACH,IAAI,CAAC,EAAE;QACjC,IAAI,CAACD,MAAM,GAAGK,SAAS;MACzB;MACA,OAAO,IAAI;IACb;IACA,QAAQJ,IAAI;MACV,KAAK,IAAI,CAACZ,GAAG;QACX;QACA,OAAO,KAAK;MACd;QACE,OAAO,IAAI;IACf;EACF;AACF;AAEAiB,MAAM,CAACC,OAAO,GAAGrB,aAAa","ignoreList":[]}