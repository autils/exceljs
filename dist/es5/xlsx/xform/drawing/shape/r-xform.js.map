{"version":3,"file":"r-xform.js","names":["BaseXform","require","SolidFillXform","RunXform","constructor","map","tag","render","xmlStream","run","openNode","font","addAttributes","sz","size","undefined","b","bold","i","italic","u","underline","color","closeNode","leafNode","text","parseOpen","node","parser","name","model","parsingText","attributes","parseInt","parseText","replace","$0","$1","String","fromCharCode","parseClose","module","exports"],"sources":["../../../../../../lib/xlsx/xform/drawing/shape/r-xform.js"],"sourcesContent":["const BaseXform = require('../../base-xform');\nconst SolidFillXform = require('./solid-fill-xform');\n\n// DocumentFormat.OpenXml.Drawing.Run\nclass RunXform extends BaseXform {\n  constructor() {\n    super();\n\n    this.map = {\n      'a:solidFill': new SolidFillXform(),\n    };\n  }\n\n  get tag() {\n    return 'a:r';\n  }\n\n  render(xmlStream, run) {\n    xmlStream.openNode(this.tag);\n    xmlStream.openNode('a:rPr');\n    if (run.font) {\n      xmlStream.addAttributes({\n        sz: run.font.size ? run.font.size * 100 : undefined,\n        b: run.font.bold ? 1 : undefined,\n        i: run.font.italic ? 1 : undefined,\n        u: run.font.underline || undefined,\n      });\n    }\n    if (run.font && run.font.color) {\n      this.map['a:solidFill'].render(xmlStream, run.font.color);\n    }\n    xmlStream.closeNode();\n    xmlStream.leafNode('a:t', undefined, run.text);\n    xmlStream.closeNode();\n  }\n\n  parseOpen(node) {\n    if (this.parser) {\n      this.parser.parseOpen(node);\n      return true;\n    }\n\n    switch (node.name) {\n      case this.tag:\n        this.model = {text: '', font: {}};\n        this.parsingText = false;\n        break;\n      case 'a:rPr':\n        if (node.attributes.sz) {\n          this.model.font.size = parseInt(node.attributes.sz, 10) / 100;\n        }\n        if (node.attributes.b) {\n          this.model.font.bold = node.attributes.b === '1';\n        }\n        if (node.attributes.i) {\n          this.model.font.italic = node.attributes.i === '1';\n        }\n        if (node.attributes.u) {\n          this.model.font.underline = node.attributes.u;\n        }\n        break;\n      case 'a:t':\n        this.parsingText = true;\n        break;\n      default:\n        this.parser = this.map[node.name];\n        if (this.parser) {\n          this.parser.parseOpen(node);\n        }\n        break;\n    }\n    return true;\n  }\n\n  parseText(text) {\n    if (this.parsingText) {\n      this.model.text = text.replace(/_x([0-9A-F]{4})_/g, ($0, $1) => String.fromCharCode(parseInt($1, 16)));\n    }\n  }\n\n  parseClose(name) {\n    if (this.parser) {\n      if (!this.parser.parseClose(name)) {\n        this.parser = undefined;\n      }\n      return true;\n    }\n    switch (name) {\n      case this.tag:\n        if (this.map['a:solidFill'].model) {\n          this.model.font.color = this.map['a:solidFill'].model;\n        }\n        return false;\n      case 'a:t':\n        this.parsingText = false;\n        return true;\n      default:\n        return true;\n    }\n  }\n}\n\nmodule.exports = RunXform;\n"],"mappings":"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","ignoreList":[]}